###########################################################################################################
### Packages Thermo
###########################################################################################################

###########################################################################################################
### Customize
###########################################################################################################
homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        Package: ---Thermo---
        Creato da: MaGiDeL
        Creato per: HassioHelp

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

###########################################################################################################
## INPUT
###########################################################################################################
input_number:
  temp_high:
    name: HighTarget
    min: 15
    max: 22
    step: 0.5
  temp_low:
    name: LowTarget
    min: 15
    max: 22
    step: 0.5
  setpoint:
    name: SetPoint
    min: 15
    max: 22
    step: 0.5

input_datetime:
  period_thermo_on:
    name: Period Thermo Start
    has_date: true
    has_time: true
  period_thermo_off:
    name: Period Thermo Stop
    has_date: true
    has_time: true


input_boolean:
  weekend_on:
    name: Weekend At Home
    icon: mdi:calendar-week
  auto_mode:
    name: Auto Mode
    icon: mdi:brightness-auto
  away_mode:
    name: Away mode
    icon: mdi:alpha-a-box
  boost_mode:
    name: Boost mode (+0.5Â°C  19.00-08.00)
    icon: mdi:alpha-b-box

input_text:
  modality:
    name: Modality
###########################################################################################################
### CLIMATE
###########################################################################################################
climate:
  - platform: generic_thermostat
    name: Generic Thermo
    heater: switch.shelly_shsw_1_XXXXX
    target_sensor: sensor.avgtempthermo
    min_temp: 17
    max_temp: 22
    ac_mode: false
    min_cycle_duration:
      seconds: 5
    keep_alive:
      minutes: 3
    initial_hvac_mode: "heat"
    away_temp: 15
    hot_tolerance: 0


###########################################################################################################
### SENSORS
###########################################################################################################
sensor:
  ########################################################################
  ### THERMO Timer last 24
  ########################################################################
  - platform: history_stats
    name: Thermo Switch (last 24h)
    entity_id: switch.shelly_shsw_1_XXXXX
    state: 'on'
    type: time
    end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    duration:
      hours: 24
  
  - platform: template
    sensors:
      template_thermo_switch_last_24h:
        friendly_name: "Template Thermo Switch last 24h"
        icon_template: "mdi:timer"
        value_template: "{{ states('sensor.thermo_switch_last_24h') | multiply(3600) | timestamp_custom('%H:%M:%S', 0) }}"

  ########################################################################
  ### THERMO Timer Today
  ########################################################################
  - platform: history_stats
    name: Thermo Switch Today
    entity_id: switch.shelly_shsw_1_XXXXX
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: template
    sensors:
      template_thermo_switch_today:
        friendly_name: "Template Thermo Switch today"
        icon_template: "mdi:timer"
        value_template: "{{ states('sensor.thermo_switch_today') | multiply(3600) | timestamp_custom('%H:%M:%S', 0) }}"


  ########################################################################
  - platform: template
    sensors:
      template_period_thermo:
        friendly_name: "Last Period Thermo Switch ON"
        icon_template: "mdi:timer"
        value_template: >-
          {{ ((state_attr('input_datetime.period_thermo_off', 'timestamp')) - (state_attr('input_datetime.period_thermo_on', 'timestamp'))) | int | timestamp_custom('%H:%M:%S', 0) }}
          
  ########################################################################
  ### THERMO Uptime
  ########################################################################
  - platform: template
    sensors:
      template_thermo_switch_uptime:
        friendly_name: 'Template Thermo Switch Uptime'
        icon_template: "mdi:timer"
        value_template: >-
  
          {%- set time = states('sensor.shelly_shsw_1_XXXXX_uptime_attr') | int  %}
          {%- set seconds = ((time % 60) // 1) %}
          {%- set seconds = '{}s '.format(seconds) if seconds > 0 else '' %}
          {%- set minutes = ((time % 3600) // 60) %}
          {%- set minutes = '{}m '.format(minutes) if minutes > 0 else '' %}
          {%- set hours = ((time % 86400) // 3600) %}
          {%- set hours = '{}h '.format(hours) if hours > 0 else '' %}
          {%- set days = (time // 86400) %}
          {%- set days = '{}d '.format(days) if days > 0 else '' %}
          {{ 'Less than 1 minute' if time < 60 else days + hours + minutes + seconds }}ago

###########################################################################################################
### BINARY_SENSORS
###########################################################################################################
binary_sensor:
  - platform: rest
    resource: http://10.10.1.50/status
    name: Shelly Thermo MQTT Connected
    value_template: "{{ value_json['mqtt'].connected }}"
    username: !secret usr_shelly
    password: !secret psw_shelly
  
  - platform: rest
    resource: http://10.10.1.50/status
    name: Shelly Thermo Cloud connected
    value_template: "{{ value_json['cloud'].connected }}"
    username: !secret usr_shelly
    password: !secret psw_shelly


###########################################################################################################
### AUTOMATION
###########################################################################################################
automation:
  - alias: Thermo AUTO Mode
    initial_state: False
    trigger:
      - platform: time_pattern
        minutes: '/1' # ogni minuto
    condition:
        condition: state
        entity_id: input_boolean.auto_mode
        state: 'on'
    action:
      service: python_script.scheduler_auto

  - alias: Thermo MANUAL Mode
    initial_state: False
    trigger:
      - platform: time_pattern
        minutes: '/1' # ogni minuto
    condition:
        condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.generic_thermo
          temperature: 19

########################################################################
  - alias: Thermo AUTO Mode
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.auto_mode
        from: "off"
        to: "on"
    action:
      - service: climate.turn_on
        entity_id: climate.generic_thermo
      - delay: '00:00:01'
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.weekend_on
      - delay: '00:00:01'
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.away_mode
      - delay: '00:00:01'
      - service: input_text.set_value
        data:
          entity_id: input_text.modality
          value: "AUTO Mode"
      - delay: '00:00:01'
      - service: automation.turn_on
        entity_id: automation.thermo_auto_mode
      - delay: '00:00:01'
      - service: automation.turn_off
        entity_id: automation.thermo_manual_mode
      - delay: '00:00:01'
      - service: notify.telegram
        data_template:
          title: '--- *AUTO mode* ---'
          message: |-
            
            AUTO mode activated by UI
            HighTarget: {{ states('input_number.temp_high') }}
            {{ now().strftime('%Y-%m-%d %H:%M:%S') }}

  - alias: Thermo AWAY Mode
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.away_mode
        from: "off"
        to: "on"
    action:
      - service: climate.turn_on
        entity_id: climate.generic_thermo
      - delay: '00:00:01'
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.auto_mode
      - delay: '00:00:01'
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.weekend_on
      - delay: '00:00:01'
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.boost_mode
      - delay: '00:00:01'
      - service: input_text.set_value
        data:
          entity_id: input_text.modality
          value: "Away Mode"
      - delay: '00:00:01'
      - service: automation.turn_off
        entity_id: automation.thermo_auto_mode
      - delay: '00:00:01'
      - service: automation.turn_on
        entity_id: automation.thermo_manual_mode
      - delay: '00:00:01'
      - service: input_number.set_value
        data:
          entity_id: input_number.setpoint
          value: 17
      - service: notify.telegram
        data_template:
          title: '--- *Away mode* ---'
          message: |-
            
            Away mode activated by UI
            {{ now().strftime('%Y-%m-%d %H:%M:%S') }}

  - alias: Thermo MANUAL Mode
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.auto_mode
        from: "on"
        to: "off"
    condition:
        condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
    action:
      - service: climate.turn_on
        entity_id: climate.generic_thermo
      - delay: '00:00:01'
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.auto_mode
      - delay: '00:00:01'
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.weekend_on
      - delay: '00:00:01'
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.boost_mode
      - delay: '00:00:01'
      - service: input_text.set_value
        data:
          entity_id: input_text.modality
          value: "MANUAL Mode"
      - delay: '00:00:01'
      - service: automation.turn_off
        entity_id: automation.thermo_auto_mode
      - delay: '00:00:01'
      - service: automation.turn_on
        entity_id: automation.thermo_manual_mode
      - delay: '00:00:01'
      - service: input_number.set_value
        data:
          entity_id: input_number.setpoint
          value: 19
      - service: notify.telegram
        data_template:
          title: '--- *MANUAL mode* ---'
          message: |-
            
            MANUAL mode activated by UI
            setpoint: {{ states('input_number.setpoint') }}
            {{ now().strftime('%Y-%m-%d %H:%M:%S') }}

########################################################################
  - alias: BoostSetPointIncrement
    initial_state: true
    trigger:
      - platform: time
        at: "19:00:00"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.auto_mode
          state: 'on'
        - condition: state
          entity_id: input_boolean.boost_mode
          state: 'on'
    action:
      - service: input_number.increment
        data:
          entity_id: input_number.temp_high
      - delay: '00:00:03'
      - service: notify.telegram
        data_template:
          title: '--- *TempHigh reference* ---'
          message: "New TempHigh: {{ states('input_number.temp_high') }} Â°C"

  - alias: BoostSetPointDecrement
    initial_state: true
    trigger:
      - platform: time
        at: "08:00:00"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.auto_mode
          state: 'on'
        - condition: state
          entity_id: input_boolean.boost_mode
          state: 'on'
    action:
      - service: input_number.decrement
        data:
          entity_id: input_number.temp_high
      - delay: '00:00:03'
      - service: notify.telegram
        data_template:
          title: '--- *TempHigh reference* ---'
          message: "New TempHigh: {{ states('input_number.temp_high') }} Â°C"

########################################################################
  - alias: Notify Thermo Switch ON
    initial_state: True
    trigger:
      - platform: state
        entity_id: switch.shelly_shsw_1_XXXXX
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: climate.generic_thermo
        from: 'off'
        to: 'heat'
    condition:
        condition: state
        entity_id: input_boolean.auto_mode
        state: 'on'
    action:
      - service: input_datetime.set_datetime
        entity_id: input_datetime.period_thermo_on
        data_template:
          datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
      - delay: '00:00:03'
      - service: notify.telegram
        data_template:
          title: '--- *Thermo Switch/Climate start by scheduler* ---'
          message: |-
            
            
            {{ "\U0001F525" }} *Thermo Switch ON*
            
            Set temp at: {{ states('input_number.temp_high') }} Â°C (current temp: {{ states('sensor.avgtempthermo') }} Â°C)
            
            state Thermo Switch: {{ states('switch.shelly_shsw_1_XXXXX') }} at {{ now().strftime('%Y-%m-%d %H:%M:%S') }}



########################################################################
  - alias: Notify Thermo Switch OFF
    initial_state: True
    trigger:
      - platform: state
        entity_id: switch.shelly_shsw_1_XXXXX
        from: 'on'
        to: 'off'
      - platform: state
        entity_id: climate.generic_thermo
        from: 'heat'
        to: 'off'
    condition:
      condition: state
      entity_id: input_boolean.auto_mode
      state: 'on'
    action:
      - service: input_datetime.set_datetime
        entity_id: input_datetime.period_thermo_off
        data_template:
          datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
      - delay: '00:00:03'
      - service: notify.telegram
        data_template:
          title: '--- *Thermo Switch/Climate stop by scheduler* ---'
          message: |-
            
            
            {{ "\u2744\ufe0f" }} *Thermo Switch OFF*
            
            Set temp at: {{ states('input_number.temp_low') }} Â°C (current temp: {{ states('sensor.avgtempthermo') }} Â°C)
            
            state Thermo Switch: {{ states('switch.shelly_shsw_1_XXXXX') }} at {{ states('input_datetime.period_thermo_off') }}
            
            Period Thermo ON: {{ states('sensor.template_period_thermo') }}



